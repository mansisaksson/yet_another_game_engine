[ ] Create a collision system
	[x] Implement btMotionState
	[ ] Implement collision dispatcher callbacks
	[ ] re-use shapes

[ ] Add a line-renderer to improve debugging.

[ ] Create a proper renderer - Right now we do the worst kind of rendering (basically no kind), which is extreemly inefficient
	[ ] Batch render commands
	[ ] Sort by materials
	[ ] Improve uniform system (We call set unform qute a bit, which can get expensive)

[ ] Test building on Linux/Mac
	
============================ DONE ============================

[x] Fix bullet compiler warnings

[x] Fix CMake Build All bug (For some reason, you now have to build the Buld All twice for the build not to fail, this was not always the case, figure out what changed!)

[x] Add axis import option to mesh (Should be able to swap the axes to align with the engine)

[x] draw a scene of objects
	[x] create a scene with multiple entities
	[x] draw the entities
	
[x] Implement tavla_window

[x] Implement tavla_viewport
	[x] make gl_viewport
	[x] allow for multiple viewports

[x] Draw something
	[x] Add static mesh
		[x] Load model
	[x] Add texture
		[x] Load texture
	[x] Add camera
	[x] Add materials/shaders
	[x] Abstract the drawing
	
[x] Add input
	[x] Abstract the input
	
============================ BACKLOG ============================

[ ] Improve mesh importer
	[ ] Don't split the mesh by materials - Right now we create one mesh per material, this gives us copies of some vertices, 
	we should instead have one vertex list, and two index lists.
	[ ] Do some refactoring - The importer is a modified version of something found on the internet, it wasn't very good and basically needs a re-write.

[ ] Setup UI sizing system
	[ ] Create primitive UI types
		[x] Vertical box
		[x] Horizontal box
		[ ] Grid
		[ ] Overlay
	[ ] Set fill mode on slots

[ ] add mouse input