#pragma once

#include <string>
#include <unordered_map>

enum class key_event
{
	e_pressed	= 0,
	e_released	= 1,
	e_repeat	= 2,
};

enum class key
{
	e_unknown		= 0,
	e_space			= 0,
	e_apostrophe	= 0,
	e_comma			= 0,
	e_minus			= 0,
	e_period		= 0,
	e_slash			= 0,
	e_0				= 0,
	e_1				= 0,
	e_2				= 0,
	e_3				= 0,
	e_4				= 0,
	e_5				= 0,
	e_6				= 0,
	e_7				= 0,
	e_8				= 0,
	e_9				= 0,
	e_semicolon		= 0,
	e_equal			= 0,
	e_a				= 0,
	e_b				= 0,
	e_c				= 0,
	e_d				= 0,
	e_e				= 0,
	e_f				= 0,
	e_g				= 0,
	e_h				= 0,
	e_i				= 0,
	e_j				= 0,
	e_k				= 0,
	e_l				= 0,
	e_m				= 0,
	e_n				= 0,
	e_o				= 0,
	e_p				= 0,
	e_q				= 0,
	e_r				= 0,
	e_s				= 0,
	e_t				= 0,
	e_u				= 0,
	e_v				= 0,
	e_w				= 0,
	e_x				= 0,
	e_y				= 0,
	e_z				= 0,
	e_left_bracket	= 0,
	e_backslash		= 0,
	e_right_bracket	= 0,
	e_grave_accent	= 0,
	e_world_1		= 0,
	e_world_2		= 0,
	e_escape		= 0,
	e_enter			= 0,
	e_tab			= 0,
	e_backspace		= 0,
	e_insert		= 0,
	e_delete		= 0,
	e_right			= 0,
	e_left			= 0,
	e_down			= 0,
	e_up			= 0,
	e_page_up		= 0,
	e_page_down		= 0,
	e_home			= 0,
	e_end			= 0,
	e_caps_lock		= 0,
	e_scroll_lock	= 0,
	e_num_lock		= 0,
	e_print_screen	= 0,
	e_pause			= 0,
	e_f1			= 0,
	e_f2			= 0,
	e_f3			= 0,
	e_f4			= 0,
	e_f5			= 0,
	e_f6			= 0,
	e_f7			= 0,
	e_f8			= 0,
	e_f9			= 0,
	e_f10			= 0,
	e_f11			= 0,
	e_f12			= 0,
	e_f13			= 0,
	e_f14			= 0,
	e_f15			= 0,
	e_f16			= 0,
	e_f17			= 0,
	e_f18			= 0,
	e_f19			= 0,
	e_f20			= 0,
	e_f21			= 0,
	e_f22			= 0,
	e_f23			= 0,
	e_f24			= 0,
	e_f25			= 0,
	e_kp_0			= 0,
	e_kp_1			= 0,
	e_kp_2			= 0,
	e_kp_3			= 0,
	e_kp_4			= 0,
	e_kp_5			= 0,
	e_kp_6			= 0,
	e_kp_7			= 0,
	e_kp_8			= 0,
	e_kp_9			= 0,
	e_kp_decimal	= 0,
	e_kp_divide		= 0,
	e_kp_multiply	= 0,
	e_kp_subtract	= 0,
	e_kp_add		= 0,
	e_kp_enter		= 0,
	e_kp_equal		= 0,
	e_left_shift	= 0,
	e_left_control	= 0,
	e_left_alt		= 0,
	e_left_super	= 0,
	e_right_shift	= 0,
	e_right_control	= 0,
	e_right_alt		= 0,
	e_right_super	= 0,
	e_menu			= 0,

	e_mouse_button_1		= 0,
	e_mouse_button_2		= 0,
	e_mouse_button_middle	= 0,
	e_mouse_button_4		= 0,
	e_mouse_button_5		= 0,
	e_mouse_button_6		= 0,
	e_mouse_button_7		= 0,
	e_mouse_button_8		= 0,

	e_max			= 100,
};

static std::string key_to_string(key t_key)
{
	const static std::unordered_map<key, std::string> key_str_table = 
	{
		{ key::e_unknown,		"unknown" },
		{ key::e_space,			"space" },
		{ key::e_apostrophe,	"apostrophe" },
		{ key::e_comma,			"comma" },
		{ key::e_minus,			"minus" },
		{ key::e_period,		"period" },
		{ key::e_slash,			"slash" },
		{ key::e_0,				"0" },
		{ key::e_1,				"1" },
		{ key::e_2,				"2" },
		{ key::e_3,				"3" },
		{ key::e_4,				"4" },
		{ key::e_5,				"5" },
		{ key::e_6,				"6" },
		{ key::e_7,				"7" },
		{ key::e_8,				"8" },
		{ key::e_9,				"9" },
		{ key::e_semicolon,		"semicolon" },
		{ key::e_equal,			"equal" },
		{ key::e_a,				"a" },
		{ key::e_b,				"b" },
		{ key::e_c,				"c" },
		{ key::e_d,				"d" },
		{ key::e_e,				"e" },
		{ key::e_f,				"f" },
		{ key::e_g,				"g" },
		{ key::e_h,				"h" },
		{ key::e_i,				"i" },
		{ key::e_j,				"j" },
		{ key::e_k,				"k" },
		{ key::e_l,				"l" },
		{ key::e_m,				"m" },
		{ key::e_n,				"n" },
		{ key::e_o,				"o" },
		{ key::e_p,				"p" },
		{ key::e_q,				"q" },
		{ key::e_r,				"r" },
		{ key::e_s,				"s" },
		{ key::e_t,				"t" },
		{ key::e_u,				"u" },
		{ key::e_v,				"v" },
		{ key::e_w,				"w" },
		{ key::e_x,				"x" },
		{ key::e_y,				"y" },
		{ key::e_z,				"z" },
		{ key::e_left_bracket,	"left_bracket" },
		{ key::e_backslash,		"backslash" },
		{ key::e_right_bracket,	"right_bracket" },
		{ key::e_grave_accent,	"grave_accent" },
		{ key::e_world_1,		"world_1" },
		{ key::e_world_2,		"world_2" },
		{ key::e_escape,		"escape" },
		{ key::e_enter,			"enter" },
		{ key::e_tab,			"tab" },
		{ key::e_backspace,		"backspace" },
		{ key::e_insert,		"insert" },
		{ key::e_delete,		"del" },
		{ key::e_right,			"right" },
		{ key::e_left,			"left" },
		{ key::e_down,			"down" },
		{ key::e_up,			"up" },
		{ key::e_page_up,		"page_up" },
		{ key::e_page_down,		"page_down" },
		{ key::e_home,			"home" },
		{ key::e_end,			"end" },
		{ key::e_caps_lock,		"caps_lock" },
		{ key::e_scroll_lock,	"scroll_lock" },
		{ key::e_num_lock,		"num_lock" },
		{ key::e_print_screen,	"print_screen" },
		{ key::e_pause,			"pause" },
		{ key::e_f1,			"f1" },
		{ key::e_f2,			"f2" },
		{ key::e_f3,			"f3" },
		{ key::e_f4,			"f4" },
		{ key::e_f5,			"f5" },
		{ key::e_f6,			"f6" },
		{ key::e_f7,			"f7" },
		{ key::e_f8,			"f8" },
		{ key::e_f9,			"f9" },
		{ key::e_f10,			"f10" },
		{ key::e_f11,			"f11" },
		{ key::e_f12,			"f12" },
		{ key::e_f13,			"f13" },
		{ key::e_f14,			"f14" },
		{ key::e_f15,			"f15" },
		{ key::e_f16,			"f16" },
		{ key::e_f17,			"f17" },
		{ key::e_f18,			"f18" },
		{ key::e_f19,			"f19" },
		{ key::e_f20,			"f20" },
		{ key::e_f21,			"f21" },
		{ key::e_f22,			"f22" },
		{ key::e_f23,			"f23" },
		{ key::e_f24,			"f24" },
		{ key::e_f25,			"f25" },
		{ key::e_kp_0,			"kp_0" },
		{ key::e_kp_1,			"kp_1" },
		{ key::e_kp_2,			"kp_2" },
		{ key::e_kp_3,			"kp_3" },
		{ key::e_kp_4,			"kp_4" },
		{ key::e_kp_5,			"kp_5" },
		{ key::e_kp_6,			"kp_6" },
		{ key::e_kp_7,			"kp_7" },
		{ key::e_kp_8,			"kp_8" },
		{ key::e_kp_9,			"kp_9" },
		{ key::e_kp_decimal,	"kp_decimal" },
		{ key::e_kp_divide,		"kp_divide" },
		{ key::e_kp_multiply,	"kp_multiply" },
		{ key::e_kp_subtract,	"kp_subtract" },
		{ key::e_kp_add,		"kp_add" },
		{ key::e_kp_enter,		"kp_enter" },
		{ key::e_kp_equal,		"kp_equal" },
		{ key::e_left_shift,	"left_shift" },
		{ key::e_left_control,	"left_control" },
		{ key::e_left_alt,		"left_alt" },
		{ key::e_left_super,	"left_super" },
		{ key::e_right_shift,	"right_shift" },
		{ key::e_right_control,	"right_control" },
		{ key::e_right_alt,		"right_alt" },
		{ key::e_right_super,	"right_super" },
		{ key::e_menu,			"menu" }
	};

	return key_str_table.at(t_key);
}
