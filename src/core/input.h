#pragma once

#include <string>
#include <unordered_map>

enum class key_event
{
	e_pressed	= 0,
	e_released	= 1,
	e_repeat	= 2,
};

static std::string key_event_to_string(key_event t_key_event)
{
	const static std::unordered_map<key_event, std::string> key_event_str_table =
	{
		{ key_event::e_pressed,		"pressed" },
		{ key_event::e_released,	"released" },
		{ key_event::e_repeat,		"repeat" },

	};
	return key_event_str_table.at(t_key_event);
}

enum class key
{
	e_unknown		= 0,
	e_space			= 1,
	e_apostrophe	= 2,
	e_comma			= 3,
	e_minus			= 4,
	e_period		= 5,
	e_slash			= 6,
	e_0				= 7,
	e_1				= 8,
	e_2				= 9,
	e_3				= 10,
	e_4				= 11,
	e_5				= 12,
	e_6				= 13,
	e_7				= 14,
	e_8				= 15,
	e_9				= 16,
	e_semicolon		= 17,
	e_equal			= 18,
	e_a				= 19,
	e_b				= 20,
	e_c				= 21,
	e_d				= 22,
	e_e				= 23,
	e_f				= 24,
	e_g				= 25,
	e_h				= 26,
	e_i				= 27,
	e_j				= 28,
	e_k				= 29,
	e_l				= 30,
	e_m				= 31,
	e_n				= 32,
	e_o				= 33,
	e_p				= 34,
	e_q				= 35,
	e_r				= 36,
	e_s				= 37,
	e_t				= 38,
	e_u				= 39,
	e_v				= 40,
	e_w				= 41,
	e_x				= 42,
	e_y				= 43,
	e_z				= 44,
	e_left_bracket	= 45,
	e_backslash		= 46,
	e_right_bracket	= 47,
	e_grave_accent	= 48,
	e_world_1		= 49,
	e_world_2		= 50,
	e_escape		= 51,
	e_enter			= 52,
	e_tab			= 53,
	e_backspace		= 54,
	e_insert		= 55,
	e_delete		= 56,
	e_right			= 57,
	e_left			= 58,
	e_down			= 59,
	e_up			= 60,
	e_page_up		= 61,
	e_page_down		= 62,
	e_home			= 63,
	e_end			= 64,
	e_caps_lock		= 65,
	e_scroll_lock	= 66,
	e_num_lock		= 67,
	e_print_screen	= 68,
	e_pause			= 69,
	e_f1			= 70,
	e_f2			= 71,
	e_f3			= 72,
	e_f4			= 73,
	e_f5			= 74,
	e_f6			= 75,
	e_f7			= 76,
	e_f8			= 77,
	e_f9			= 78,
	e_f10			= 79,
	e_f11			= 80,
	e_f12			= 81,
	e_f13			= 82,
	e_f14			= 83,
	e_f15			= 84,
	e_f16			= 85,
	e_f17			= 86,
	e_f18			= 87,
	e_f19			= 88,
	e_f20			= 89,
	e_f21			= 90,
	e_f22			= 91,
	e_f23			= 92,
	e_f24			= 93,
	e_f25			= 94,
	e_kp_0			= 95,
	e_kp_1			= 96,
	e_kp_2			= 97,
	e_kp_3			= 98,
	e_kp_4			= 99,
	e_kp_5			= 100,
	e_kp_6			= 101,
	e_kp_7			= 102,
	e_kp_8			= 103,
	e_kp_9			= 104,
	e_kp_decimal	= 105,
	e_kp_divide		= 106,
	e_kp_multiply	= 107,
	e_kp_subtract	= 108,
	e_kp_add		= 109,
	e_kp_enter		= 110,
	e_kp_equal		= 111,
	e_left_shift	= 112,
	e_left_control	= 113,
	e_left_alt		= 114,
	e_left_super	= 115,
	e_right_shift	= 116,
	e_right_control	= 117,
	e_right_alt		= 118,
	e_right_super	= 119,
	e_menu			= 120,

	e_mouse_button_1		= 121,
	e_mouse_button_2		= 122,
	e_mouse_button_middle	= 123,
	e_mouse_button_4		= 124,
	e_mouse_button_5		= 125,
	e_mouse_button_6		= 126,
	e_mouse_button_7		= 127,
	e_mouse_button_8		= 128,

	e_max			= 129,
};

static std::string key_to_string(key t_key)
{
	const static std::unordered_map<key, std::string> key_str_table = 
	{
		{ key::e_unknown,		"unknown" },
		{ key::e_space,			"space" },
		{ key::e_apostrophe,	"apostrophe" },
		{ key::e_comma,			"comma" },
		{ key::e_minus,			"minus" },
		{ key::e_period,		"period" },
		{ key::e_slash,			"slash" },
		{ key::e_0,				"0" },
		{ key::e_1,				"1" },
		{ key::e_2,				"2" },
		{ key::e_3,				"3" },
		{ key::e_4,				"4" },
		{ key::e_5,				"5" },
		{ key::e_6,				"6" },
		{ key::e_7,				"7" },
		{ key::e_8,				"8" },
		{ key::e_9,				"9" },
		{ key::e_semicolon,		"semicolon" },
		{ key::e_equal,			"equal" },
		{ key::e_a,				"a" },
		{ key::e_b,				"b" },
		{ key::e_c,				"c" },
		{ key::e_d,				"d" },
		{ key::e_e,				"e" },
		{ key::e_f,				"f" },
		{ key::e_g,				"g" },
		{ key::e_h,				"h" },
		{ key::e_i,				"i" },
		{ key::e_j,				"j" },
		{ key::e_k,				"k" },
		{ key::e_l,				"l" },
		{ key::e_m,				"m" },
		{ key::e_n,				"n" },
		{ key::e_o,				"o" },
		{ key::e_p,				"p" },
		{ key::e_q,				"q" },
		{ key::e_r,				"r" },
		{ key::e_s,				"s" },
		{ key::e_t,				"t" },
		{ key::e_u,				"u" },
		{ key::e_v,				"v" },
		{ key::e_w,				"w" },
		{ key::e_x,				"x" },
		{ key::e_y,				"y" },
		{ key::e_z,				"z" },
		{ key::e_left_bracket,	"left_bracket" },
		{ key::e_backslash,		"backslash" },
		{ key::e_right_bracket,	"right_bracket" },
		{ key::e_grave_accent,	"grave_accent" },
		{ key::e_world_1,		"world_1" },
		{ key::e_world_2,		"world_2" },
		{ key::e_escape,		"escape" },
		{ key::e_enter,			"enter" },
		{ key::e_tab,			"tab" },
		{ key::e_backspace,		"backspace" },
		{ key::e_insert,		"insert" },
		{ key::e_delete,		"del" },
		{ key::e_right,			"right" },
		{ key::e_left,			"left" },
		{ key::e_down,			"down" },
		{ key::e_up,			"up" },
		{ key::e_page_up,		"page_up" },
		{ key::e_page_down,		"page_down" },
		{ key::e_home,			"home" },
		{ key::e_end,			"end" },
		{ key::e_caps_lock,		"caps_lock" },
		{ key::e_scroll_lock,	"scroll_lock" },
		{ key::e_num_lock,		"num_lock" },
		{ key::e_print_screen,	"print_screen" },
		{ key::e_pause,			"pause" },
		{ key::e_f1,			"f1" },
		{ key::e_f2,			"f2" },
		{ key::e_f3,			"f3" },
		{ key::e_f4,			"f4" },
		{ key::e_f5,			"f5" },
		{ key::e_f6,			"f6" },
		{ key::e_f7,			"f7" },
		{ key::e_f8,			"f8" },
		{ key::e_f9,			"f9" },
		{ key::e_f10,			"f10" },
		{ key::e_f11,			"f11" },
		{ key::e_f12,			"f12" },
		{ key::e_f13,			"f13" },
		{ key::e_f14,			"f14" },
		{ key::e_f15,			"f15" },
		{ key::e_f16,			"f16" },
		{ key::e_f17,			"f17" },
		{ key::e_f18,			"f18" },
		{ key::e_f19,			"f19" },
		{ key::e_f20,			"f20" },
		{ key::e_f21,			"f21" },
		{ key::e_f22,			"f22" },
		{ key::e_f23,			"f23" },
		{ key::e_f24,			"f24" },
		{ key::e_f25,			"f25" },
		{ key::e_kp_0,			"kp_0" },
		{ key::e_kp_1,			"kp_1" },
		{ key::e_kp_2,			"kp_2" },
		{ key::e_kp_3,			"kp_3" },
		{ key::e_kp_4,			"kp_4" },
		{ key::e_kp_5,			"kp_5" },
		{ key::e_kp_6,			"kp_6" },
		{ key::e_kp_7,			"kp_7" },
		{ key::e_kp_8,			"kp_8" },
		{ key::e_kp_9,			"kp_9" },
		{ key::e_kp_decimal,	"kp_decimal" },
		{ key::e_kp_divide,		"kp_divide" },
		{ key::e_kp_multiply,	"kp_multiply" },
		{ key::e_kp_subtract,	"kp_subtract" },
		{ key::e_kp_add,		"kp_add" },
		{ key::e_kp_enter,		"kp_enter" },
		{ key::e_kp_equal,		"kp_equal" },
		{ key::e_left_shift,	"left_shift" },
		{ key::e_left_control,	"left_control" },
		{ key::e_left_alt,		"left_alt" },
		{ key::e_left_super,	"left_super" },
		{ key::e_right_shift,	"right_shift" },
		{ key::e_right_control,	"right_control" },
		{ key::e_right_alt,		"right_alt" },
		{ key::e_right_super,	"right_super" },
		{ key::e_menu,			"menu" },

		{ key::e_mouse_button_1,		"mouse_button_1" },
		{ key::e_mouse_button_2,		"mouse_button_2" },
		{ key::e_mouse_button_middle,	"mouse_button_middle" },
		{ key::e_mouse_button_4,		"mouse_button_4" },
		{ key::e_mouse_button_5,		"mouse_button_5" },
		{ key::e_mouse_button_6,		"mouse_button_6" },
		{ key::e_mouse_button_7,		"mouse_button_7" },
		{ key::e_mouse_button_8,		"mouse_button_8" },
	};

	return key_str_table.at(t_key);
}
